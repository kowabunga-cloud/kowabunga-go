/*
Kowabunga API documentation

Testing KawaiiAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package kowabunga

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/GIT_USER_ID/GIT_REPO_ID"
)

func Test_kowabunga_KawaiiAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test KawaiiAPIService CreateKawaiiIpSec", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var kawaiiId string

		resp, httpRes, err := apiClient.KawaiiAPI.CreateKawaiiIpSec(context.Background(), kawaiiId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test KawaiiAPIService DeleteKawaii", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var kawaiiId string

		httpRes, err := apiClient.KawaiiAPI.DeleteKawaii(context.Background(), kawaiiId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test KawaiiAPIService DeleteKawaiiIpSec", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var kawaiiId string
		var kawaiiIpSecId string

		httpRes, err := apiClient.KawaiiAPI.DeleteKawaiiIpSec(context.Background(), kawaiiId, kawaiiIpSecId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test KawaiiAPIService ListKawaiiIpSecs", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var kawaiiId string

		resp, httpRes, err := apiClient.KawaiiAPI.ListKawaiiIpSecs(context.Background(), kawaiiId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test KawaiiAPIService ListKawaiis", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.KawaiiAPI.ListKawaiis(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test KawaiiAPIService ReadKawaii", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var kawaiiId string

		resp, httpRes, err := apiClient.KawaiiAPI.ReadKawaii(context.Background(), kawaiiId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test KawaiiAPIService ReadKawaiiIpSec", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var kawaiiId string
		var kawaiiIpSecId string

		resp, httpRes, err := apiClient.KawaiiAPI.ReadKawaiiIpSec(context.Background(), kawaiiId, kawaiiIpSecId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test KawaiiAPIService UpdateKawaii", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var kawaiiId string

		resp, httpRes, err := apiClient.KawaiiAPI.UpdateKawaii(context.Background(), kawaiiId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test KawaiiAPIService UpdateKawaiiIpSec", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var kawaiiId string
		var kawaiiIpSecId string

		resp, httpRes, err := apiClient.KawaiiAPI.UpdateKawaiiIpSec(context.Background(), kawaiiId, kawaiiIpSecId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
