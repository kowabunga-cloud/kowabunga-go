/*
Kowabunga API documentation

Testing RegionAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package kowabunga

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	
)

func Test_kowabunga_RegionAPIService(t *testing.T) {

	configuration := NewConfiguration()
	apiClient := NewAPIClient(configuration)

	t.Run("Test RegionAPIService CreateKiwi", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var regionId string

		resp, httpRes, err := apiClient.RegionAPI.CreateKiwi(context.Background(), regionId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RegionAPIService CreateRegion", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.RegionAPI.CreateRegion(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RegionAPIService CreateStorageNFS", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var regionId string

		resp, httpRes, err := apiClient.RegionAPI.CreateStorageNFS(context.Background(), regionId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RegionAPIService CreateStoragePool", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var regionId string

		resp, httpRes, err := apiClient.RegionAPI.CreateStoragePool(context.Background(), regionId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RegionAPIService CreateVNet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var regionId string

		resp, httpRes, err := apiClient.RegionAPI.CreateVNet(context.Background(), regionId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RegionAPIService CreateZone", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var regionId string

		resp, httpRes, err := apiClient.RegionAPI.CreateZone(context.Background(), regionId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RegionAPIService DeleteRegion", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var regionId string

		httpRes, err := apiClient.RegionAPI.DeleteRegion(context.Background(), regionId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RegionAPIService ListRegionKiwis", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var regionId string

		resp, httpRes, err := apiClient.RegionAPI.ListRegionKiwis(context.Background(), regionId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RegionAPIService ListRegionStorageNFSs", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var regionId string

		resp, httpRes, err := apiClient.RegionAPI.ListRegionStorageNFSs(context.Background(), regionId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RegionAPIService ListRegionStoragePools", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var regionId string

		resp, httpRes, err := apiClient.RegionAPI.ListRegionStoragePools(context.Background(), regionId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RegionAPIService ListRegionVNets", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var regionId string

		resp, httpRes, err := apiClient.RegionAPI.ListRegionVNets(context.Background(), regionId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RegionAPIService ListRegionZones", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var regionId string

		resp, httpRes, err := apiClient.RegionAPI.ListRegionZones(context.Background(), regionId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RegionAPIService ListRegions", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.RegionAPI.ListRegions(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RegionAPIService ReadRegion", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var regionId string

		resp, httpRes, err := apiClient.RegionAPI.ReadRegion(context.Background(), regionId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RegionAPIService SetRegionDefaultStorageNFS", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var regionId string
		var nfsId string

		httpRes, err := apiClient.RegionAPI.SetRegionDefaultStorageNFS(context.Background(), regionId, nfsId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RegionAPIService SetRegionDefaultStoragePool", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var regionId string
		var poolId string

		httpRes, err := apiClient.RegionAPI.SetRegionDefaultStoragePool(context.Background(), regionId, poolId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RegionAPIService UpdateRegion", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var regionId string

		resp, httpRes, err := apiClient.RegionAPI.UpdateRegion(context.Background(), regionId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
