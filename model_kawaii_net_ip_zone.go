/*
Kowabunga API

Kvm Orchestrator With A BUNch of Goods Added

API version: 0.53.1
Contact: maintainers@kowabunga.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kowabunga

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the KawaiiNetIpZone type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KawaiiNetIpZone{}

// KawaiiNetIpZone A Kawaii Network IP zone settings.
type KawaiiNetIpZone struct {
	// The Kawaii zone name (read-only).
	Zone string `json:"zone"`
	// The Kawaii zone gateway public virtual IP (read-only).
	Public string `json:"public"`
	// The Kawaii zone gateway private virtual IP (read-only).
	Private string `json:"private"`
}

type _KawaiiNetIpZone KawaiiNetIpZone

// NewKawaiiNetIpZone instantiates a new KawaiiNetIpZone object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKawaiiNetIpZone(zone string, public string, private string) *KawaiiNetIpZone {
	this := KawaiiNetIpZone{}
	this.Zone = zone
	this.Public = public
	this.Private = private
	return &this
}

// NewKawaiiNetIpZoneWithDefaults instantiates a new KawaiiNetIpZone object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKawaiiNetIpZoneWithDefaults() *KawaiiNetIpZone {
	this := KawaiiNetIpZone{}
	return &this
}

// GetZone returns the Zone field value
func (o *KawaiiNetIpZone) GetZone() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Zone
}

// GetZoneOk returns a tuple with the Zone field value
// and a boolean to check if the value has been set.
func (o *KawaiiNetIpZone) GetZoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Zone, true
}

// SetZone sets field value
func (o *KawaiiNetIpZone) SetZone(v string) {
	o.Zone = v
}

// GetPublic returns the Public field value
func (o *KawaiiNetIpZone) GetPublic() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Public
}

// GetPublicOk returns a tuple with the Public field value
// and a boolean to check if the value has been set.
func (o *KawaiiNetIpZone) GetPublicOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Public, true
}

// SetPublic sets field value
func (o *KawaiiNetIpZone) SetPublic(v string) {
	o.Public = v
}

// GetPrivate returns the Private field value
func (o *KawaiiNetIpZone) GetPrivate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Private
}

// GetPrivateOk returns a tuple with the Private field value
// and a boolean to check if the value has been set.
func (o *KawaiiNetIpZone) GetPrivateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Private, true
}

// SetPrivate sets field value
func (o *KawaiiNetIpZone) SetPrivate(v string) {
	o.Private = v
}

func (o KawaiiNetIpZone) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KawaiiNetIpZone) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["zone"] = o.Zone
	toSerialize["public"] = o.Public
	toSerialize["private"] = o.Private
	return toSerialize, nil
}

func (o *KawaiiNetIpZone) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"zone",
		"public",
		"private",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varKawaiiNetIpZone := _KawaiiNetIpZone{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varKawaiiNetIpZone)

	if err != nil {
		return err
	}

	*o = KawaiiNetIpZone(varKawaiiNetIpZone)

	return err
}

type NullableKawaiiNetIpZone struct {
	value *KawaiiNetIpZone
	isSet bool
}

func (v NullableKawaiiNetIpZone) Get() *KawaiiNetIpZone {
	return v.value
}

func (v *NullableKawaiiNetIpZone) Set(val *KawaiiNetIpZone) {
	v.value = val
	v.isSet = true
}

func (v NullableKawaiiNetIpZone) IsSet() bool {
	return v.isSet
}

func (v *NullableKawaiiNetIpZone) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKawaiiNetIpZone(val *KawaiiNetIpZone) *NullableKawaiiNetIpZone {
	return &NullableKawaiiNetIpZone{value: val, isSet: true}
}

func (v NullableKawaiiNetIpZone) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKawaiiNetIpZone) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


