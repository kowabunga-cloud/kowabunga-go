/*
Kowabunga API documentation

Kvm Orchestrator With A BUNch of Goods Added

API version: 0.52.5
Contact: maintainers@kowabunga.cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kowabunga

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the KawaiiFirewallIngressRule type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KawaiiFirewallIngressRule{}

// KawaiiFirewallIngressRule A Kawaii public firewall ingress rule.
type KawaiiFirewallIngressRule struct {
	// The source IP or CIDR to accept public traffic from.
	Source *string `json:"source,omitempty"`
	// The transport layer protocol to accept public traffic from.
	Protocol *string `json:"protocol,omitempty"`
	// The port (or list of ports) to accept public traffic from. Ranges are accepted. Format is a-b,c-d (e.g. 443; 22,80,443; 80,443,3000-3005).
	Ports string `json:"ports"`
}

type _KawaiiFirewallIngressRule KawaiiFirewallIngressRule

// NewKawaiiFirewallIngressRule instantiates a new KawaiiFirewallIngressRule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKawaiiFirewallIngressRule(ports string) *KawaiiFirewallIngressRule {
	this := KawaiiFirewallIngressRule{}
	var source string = "0.0.0.0/0"
	this.Source = &source
	var protocol string = "tcp"
	this.Protocol = &protocol
	this.Ports = ports
	return &this
}

// NewKawaiiFirewallIngressRuleWithDefaults instantiates a new KawaiiFirewallIngressRule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKawaiiFirewallIngressRuleWithDefaults() *KawaiiFirewallIngressRule {
	this := KawaiiFirewallIngressRule{}
	var source string = "0.0.0.0/0"
	this.Source = &source
	var protocol string = "tcp"
	this.Protocol = &protocol
	return &this
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *KawaiiFirewallIngressRule) GetSource() string {
	if o == nil || IsNil(o.Source) {
		var ret string
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KawaiiFirewallIngressRule) GetSourceOk() (*string, bool) {
	if o == nil || IsNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *KawaiiFirewallIngressRule) HasSource() bool {
	if o != nil && !IsNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given string and assigns it to the Source field.
func (o *KawaiiFirewallIngressRule) SetSource(v string) {
	o.Source = &v
}

// GetProtocol returns the Protocol field value if set, zero value otherwise.
func (o *KawaiiFirewallIngressRule) GetProtocol() string {
	if o == nil || IsNil(o.Protocol) {
		var ret string
		return ret
	}
	return *o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KawaiiFirewallIngressRule) GetProtocolOk() (*string, bool) {
	if o == nil || IsNil(o.Protocol) {
		return nil, false
	}
	return o.Protocol, true
}

// HasProtocol returns a boolean if a field has been set.
func (o *KawaiiFirewallIngressRule) HasProtocol() bool {
	if o != nil && !IsNil(o.Protocol) {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given string and assigns it to the Protocol field.
func (o *KawaiiFirewallIngressRule) SetProtocol(v string) {
	o.Protocol = &v
}

// GetPorts returns the Ports field value
func (o *KawaiiFirewallIngressRule) GetPorts() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Ports
}

// GetPortsOk returns a tuple with the Ports field value
// and a boolean to check if the value has been set.
func (o *KawaiiFirewallIngressRule) GetPortsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ports, true
}

// SetPorts sets field value
func (o *KawaiiFirewallIngressRule) SetPorts(v string) {
	o.Ports = v
}

func (o KawaiiFirewallIngressRule) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KawaiiFirewallIngressRule) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	if !IsNil(o.Protocol) {
		toSerialize["protocol"] = o.Protocol
	}
	toSerialize["ports"] = o.Ports
	return toSerialize, nil
}

func (o *KawaiiFirewallIngressRule) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ports",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varKawaiiFirewallIngressRule := _KawaiiFirewallIngressRule{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varKawaiiFirewallIngressRule)

	if err != nil {
		return err
	}

	*o = KawaiiFirewallIngressRule(varKawaiiFirewallIngressRule)

	return err
}

type NullableKawaiiFirewallIngressRule struct {
	value *KawaiiFirewallIngressRule
	isSet bool
}

func (v NullableKawaiiFirewallIngressRule) Get() *KawaiiFirewallIngressRule {
	return v.value
}

func (v *NullableKawaiiFirewallIngressRule) Set(val *KawaiiFirewallIngressRule) {
	v.value = val
	v.isSet = true
}

func (v NullableKawaiiFirewallIngressRule) IsSet() bool {
	return v.isSet
}

func (v *NullableKawaiiFirewallIngressRule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKawaiiFirewallIngressRule(val *KawaiiFirewallIngressRule) *NullableKawaiiFirewallIngressRule {
	return &NullableKawaiiFirewallIngressRule{value: val, isSet: true}
}

func (v NullableKawaiiFirewallIngressRule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKawaiiFirewallIngressRule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


